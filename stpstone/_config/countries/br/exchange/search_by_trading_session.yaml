### CONFIGURATION TOOLS ###
### METADATA:
###   - https://www.b3.com.br/pt_br/market-data-e-indices/servicos-de-dados/market-data/historico/boletins-diarios/pesquisa-por-pregao/pesquisa-por-pregao/ ###
###   - FILES LAYOUT: https://www.b3.com.br/pt_br/market-data-e-indices/servicos-de-dados/market-data/historico/boletins-diarios/pesquisa-por-pregao/layout-dos-arquivos/ ####
###   - FILES DECRIPTION: https://www.b3.com.br/pt_br/market-data-e-indices/servicos-de-dados/market-data/historico/boletins-diarios/pesquisa-por-pregao/descricao-dos-arquivos/ ####

credentials:
  host: https://www.b3.com.br/
  headers:
  payload:
  token:
    host:
    get:
      req_method: GET
      bl_verify: False
      timeout: (12.0, 12.0)
    keys:
      token: token

metadata:
  standardized_instruments_groups:
    schema: raw
    table_name: br_b3_metadata_standardized_instruments_groups
    data:
      - ORIGEM_INSTRUMENTO: 4
        DECODE_INSTRUMENTO: ISIN
      - ORIGEM_INSTRUMENTO: 8
        DECODE_INSTRUMENTO: SYMBOL
      - ORIGEM_INSTRUMENTO: H
        DECODE_INSTRUMENTO: CLEARINGHOUSE
    dtypes:
      ORIGEM_INSTRUMENTO: str
      DECODE_INSTRUMENTO: str
  primitive_risk_factors:
    schema: raw
    table_name: br_b3_metadata_primitive_risk_factors
    data:
      - NOME_CAMPO: FORMATO DE VARIAÇÃO
        ID: 1
        DECODE: PERCENTUAL
      - NOME_CAMPO: FORMATO DE VARIAÇÃO
        ID: 2
        DECODE: BASIS POINTS
      - NOME_CAMPO: ORIGEM DO INSTRUMENTO INDICADO
        ID: 4
        DECODE: ISIN
      - NOME_CAMPO: ORIGEM DO INSTRUMENTO INDICADO
        ID: 8
        DECODE: SYMBOL
      - NOME_CAMPO: ORIGEM DO INSTRUMENTO INDICADO
        ID: H
        DECODE: CLEARINGHOUSE
      - NOME_CAMPO: BASE
        ID: 252
        DECODE: N/A
      - NOME_CAMPO: BASE
        ID: 360
        DECODE: N/A
      - NOME_CAMPO: BASE_INTERPOLACAO
        ID: 252
        DECODE: N/A
      - NOME_CAMPO: BASE_INTERPOLACAO
        ID: 360
        DECODE: N/A
      - NOME_CAMPO: CRITERIO_CAPITALIZACAO
        ID: 0
        DECODE: EXPONENCIAL
      - NOME_CAMPO: CRITERIO_CAPITALIZACAO
        ID: 1
        DECODE: LINEAR
      - NOME_CAMPO: CRITERIO_CAPITALIZACAO
        ID: 2
        DECODE: PREÇO
    dtypes:
      NOME_CAMPO: str
      ID: str
      DECODE: str


### RESOURCES TO BE SCRAPED ###

# Standardized Instruments Groups
standardized_instruments_groups:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  app: pesquisapregao/download?filelist=AI{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: upper_constant
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_standardized_instruments_groups
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    TIPO: int
    ID_GRUPO_INSTRUMENTOS: int
    ID_CAMARA: str
    ID_INSTRUMENTO: str
    ORIGEM_INSTRUMENTO: str
  df_read_params:
    skiprows: 1
    names:
      - TIPO
      - ID_GRUPO_INSTRUMENTOS
      - ID_CAMARA
      - ID_INSTRUMENTO
      - ORIGEM_INSTRUMENTO
    sep: ";"

# BVBG.087.01 IndexReport
index_report:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  app: pesquisapregao/download?filelist=IR{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_index_report
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    TCKR_SYMB: str
    ID: int
    PRTRY: int
    MKT_IDR_CD: category
    OPNG_PRIC: float
    MIN_PRIC: float
    MAX_PRIC: float
    TRAD_AVRG_PRIC: float
    PRVS_DAY_CLSG_PRIC: float
    CLSG_PRIC: float
    INDX_VAL: float
    OSCN_VAL: float
    ASST_DESC: str
    STTLM_VAL: float
    RSNG_SHRS_NB: int
    FLNG_SHRS_NB: int
    STBL_SHRS_NB: int
    CCY: str
    FILE_NAME: str
  df_read_params:
  xml_keys:
    tags:
      IndxInf:
        - TckrSymb
        - Id
        - Prtry
        - MktIdrCd
        - OpngPric
        - MinPric
        - MaxPric
        - TradAvrgPric
        - PrvsDayClsgPric
        - ClsgPric
        - IndxVal
        - OscnVal
        - AsstDesc
        - SttlmVal
        - RsngShrsNb
        - FlngShrsNb
        - StblShrsNb
    attributes:
      currency: Ccy

# BVBG.086.01 PriceReport
price_report:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  app: pesquisapregao/download?filelist=PR{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_price_report
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    DT: date
    TCKR_SYMB: str
    ID: str
    PRTRY: int
    MKT_IDR_CD: category
    TRAD_QTY: int
    OPN_INTRST: float
    FIN_INSTRM_QTY: int
    OSCN_PCTG: float
    NTL_FIN_VOL: int
    INTL_FIN_VOL: int
    BEST_BID_PRIC: float
    BEST_ASK_PRIC: float
    FRST_PRIC: float
    MIN_PRIC: float
    MAX_PRIC: float
    TRAD_AVRG_PRIC: float
    LAST_PRIC: float
    VARTN_PTS: float
    MAX_TRAD_LMT: float
    MIN_TRAD_LMT: float
    CCY: str
    FILE_NAME: str
  df_read_params:
  xml_keys:
    tags:
      PricRpt:
        - Dt
        - TckrSymb
        - Id
        - Prtry
        - MktIdrCd
        - TradQty
        - OpnIntrst
        - FinInstrmQty
        - OscnPctg
        - NtlFinVol
        - IntlFinVol
        - BestBidPric
        - BestAskPric
        - FrstPric
        - MinPric
        - MaxPric
        - TradAvrgPric
        - LastPric
        - VartnPts
        - MaxTradLmt
        - MinTradLmt
    attributes:
      currency: Ccy

# BVBG.028.02
instruments_file:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  app: pesquisapregao/download?filelist=IN{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_instruments_file
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    ID: str
    PRTRY: int
    ISSR: str
    DT: date
    MKT_IDR_CD: category
    ASST: str
    ASST_DESC: str
    MKT: int
    SGMT: int
    DESC: str
    SCTY_CTGY: int
    ISIN: str
    DSTRBTN_ID: str
    CFICD: str
    SPCFCTN_CD: str
    CRPN_NM: str
    TCKR_SYMB: str
    PMT_TP: int
    ALLCN_RND_LOT: int
    PRIC_FCTR: int
    TRADG_START_DT: date
    TRADG_END_DT: date
    CORP_ACTN_START_DT: date
    EXDSTRBTN_NB: int
    CTDY_TRTMNT_TP: int
    TRADG_CCY: str
    MKT_CPTLSTN: int
    LAST_PRIC: float
    FRST_PRIC: float
    DAYS_TO_STTLM: int
    RGHTS_ISSE_PRIC: float
    CCY: str
    FILE_NAME: str
  df_read_params:
  xml_keys:
    tags:
      BizGrp:
        - Id
        - Prtry
        - Issr
        - Dt
        - MktIdrCd
        - Asst
        - AsstDesc
        - Mkt
        - Sgmt
        - Desc
        - SctyCtgy
        - ISIN
        - DstrbtnId
        - CFICd
        - SpcfctnCd
        - CrpnNm
        - TckrSymb
        - PmtTp
        - AllcnRndLot
        - PricFctr
        - TradgStartDt
        - TradgEndDt
        - CorpActnStartDt
        - EXDstrbtnNb
        - CtdyTrtmntTp
        - TradgCcy
        - MktCptlstn
        - LastPric
        - FrstPric
        - DaysToSttlm
        - RghtsIssePric
    attributes:
      currency: Ccy

# BVBG.029.02
registration_indicator_instruments:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  app: pesquisapregao/download?filelist=II{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_registration_indicator_instruments
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    ID: str
    PRTRY: int
    ISSR: int
    ACTVTY_IND: str
    FRQCY: str
    NET_POS_ID: str
    DT: date
    UPD_TP: str
    MKT_IDR_CD: category
    INSTRM_NM: str
    DESC: str
    SGMT: int
    MKT: int
    ASST: str
    SCTY_CTGY: int
    TP_CD: int
    ECNC_IND_DESC: str
    BASE_CD: int
    VAL_TP_CD: int
    NTRY_REF_CD: int
    DCML_PRCSN: int
    MTRTY: int
    FILE_NAME: str
  df_read_params:
  xml_keys:
    tags:
      BizGrp:
        - Id
        - Prtry
        - Issr
        - ActvtyInd
        - Frqcy
        - NetPosId
        - Dt
        - UpdTp
        - MktIdrCd
        - InstrmNm
        - Desc
        - Sgmt
        - Mkt
        - Asst
        - SctyCtgy
        - TpCd
        - EcncIndDesc
        - BaseCd
        - ValTpCd
        - NtryRefCd
        - DcmlPrcsn
        - Mtrty

# BVBG.044.01
fee_daily_unit_cost:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  app: pesquisapregao/download?filelist=DI{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_fee_daily_unit_cost
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    SGMT: int
    MKT: int
    ASST: str
    XPRTN_CD: str
    DAY_TRAD_IND: str
    TRAD_TX_TP: int
    XCHG_FEE_UNIT_COST_AMT: float
    REGN_FEE_UNIT_COST_AMT: float
    CCY: str
    FILE_NAME: str
  df_read_params:
  xml_keys:
    tags:
      FeeInstrmInf:
        - Sgmt
        - Mkt
        - Asst
        - XprtnCd
        - DayTradInd
        - TradTxTp
        - XchgFeeUnitCost:
          - Amt
        - RegnFeeUnitCost:
          - Amt
    attributes:
      currency: Ccy

# BVBG.043.01
fee_monthly_unit_cost:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  app: pesquisapregao/download?filelist=UN{{dt_inf_month_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_fee_monthly_unit_cost
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    SGMT: int
    MKT: int
    ASST: str
    DAY_TRAD_IND: str
    TRAD_TX_TP: int
    XCHG_FEE_UNIT_COST_AMT: float
    REGN_FEE_UNIT_COST_AMT: float
    CCY: str
    FILE_NAME: str
  df_read_params:
  xml_keys:
    tags:
      FeeInstrmInf:
        - Sgmt
        - Mkt
        - Asst
        - DayTradInd
        - TradTxTp
        - XchgFeeUnitCost:
          - Amt
        - RegnFeeUnitCost:
          - Amt
    attributes:
      currency: Ccy

# Primitive Risk Factors (FPRs)
primitive_risk_factors:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  app: pesquisapregao/download?filelist=FP{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_fprs
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    TIPO: int
    ID_FPR: int
    NOME_FPR: str
    FORMATO_VARIACAO: int
    ID_GRUPO_FPR: int
    ID_CAMARA_INDICADOR: category
    ID_INSTRUMENTO_INDICADOR: str
    ORIGEM_INSTRUMENTO_INDICADO: category
    BASE: int
    BASE_INTERPOLACAO: int
    CRITERIO_CAPITALIZACAO: int
    FILE_NAME: str
  df_read_params:
    skiprows: 1
    names:
      - TIPO
      - ID_FPR
      - NOME_FPR
      - FORMATO_VARIACAO
      - ID_GRUPO_FPR
      - ID_CAMARA_INDICADOR
      - ID_INSTRUMENTO_INDICADOR
      - ORIGEM_INSTRUMENTO_INDICADO
      - BASE
      - BASE_INTERPOLACAO
      - CRITERIO_CAPITALIZACAO
    sep: ";"

# Risk Formulas
risk_formulas:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  app: pesquisapregao/download?filelist=FR{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_risk_formulas
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    TIPO: int
    ID_FORMULA_RISCO: int
    NOME_FORMULA_RISCO: str
    FILE_NAME: str
  df_read_params:
    skiprows: 1
    names:
      - TIPO
      - ID_FORMULA_RISCO
      - NOME_FORMULA_RISCO
    sep: ";"

# BVBG.024.01 Fee Variables
variable_fees_monthly_updt:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  app: pesquisapregao/download?filelist=VA{{dt_inf_month_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_variable_fees_monthly_updt
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    SGMT: int
    MKT: int
    ASST: str
    REF_DT: date
    CONVS_IND_VAL: float
    ID: int
    PRTRY: int
    MKT_IDR_CD: category
    FILE_NAME: str
  df_read_params:
  xml_keys:
    tags:
      FeeInf:
        - Sgmt
        - Mkt
        - Asst
        - RefDt
        - ConvsIndVal
        - Id
        - Prtry
        - MktIdrCd
    attributes:
      currency: Ccy

# Daily Liquidity Limit
daily_liquidity_limit:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  app: pesquisapregao/download?filelist=LD{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_daily_liquidity_limit
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    ID_CAMARA: category
    ORIGIEM_INSTRUMENTO: category
    ID_INSTRUMENTO: str
    SIMBOLO_INSTRUMENTO: str
    LIMITE_LIQUIDEZ: float
    FILE_NAME: str
  df_read_params:
    skiprows: 1
    names:
      - ID_CAMARA
      - ORIGIEM_INSTRUMENTO
      - ID_INSTRUMENTO
      - SIMBOLO_INSTRUMENTO
      - LIMITE_LIQUIDEZ
    sep: ";"
    usecols:
      - 0
      - 1
      - 2
      - 3
      - 4

# Daily Liquidity Limit - Other Limits
daily_liquidity_limit_other_limits:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  app: pesquisapregao/download?filelist=LA{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_daily_liquidity_limit_others
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    ID_CAMARA: category
    ORIGIEM_INSTRUMENTO: category
    ID_INSTRUMENTO: str
    SIMBOLO_INSTRUMENTO: str
    N_A: int
    LIMITE_LIQUIDEZ: float
    FILE_NAME: str
  df_read_params:
    skiprows: 1
    names:
      - ID_CAMARA
      - ORIGIEM_INSTRUMENTO
      - ID_INSTRUMENTO
      - SIMBOLO_INSTRUMENTO
      - N_A
      - LIMITE_LIQUIDEZ
    sep: ";"

# Tradable Security List
tradable_security_list:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  app: pesquisapregao/download?filelist=SecurityList{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: pascal
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: DD/MM/YYYY
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_tradable_security_list
  bl_insert_or_ignore: False
  bl_schema: True
  ignored_file_extensions_zip:
    - tmp
    - log
    - bak
    - json
  dtypes:
    SYMBOL: str
    SECURITY_ID: int
    SECURITY_ID_SOURCE: category
    SECURITY_EXCHANGE: category
    NO_APPL_IDS: category
    APPL_ID: str
    PUT_OR_CALL: category
    PRODUCT: category
    CFI_CODE: category
    SECURITY_GROUP: str
    SECURITY_TYPE: category
    SECURITY_SUB_TYPE: category
    MATURITY_MONTH_YEAR: int
    MATURITY_DATE: date
    ISSUE_DATE: date
    COUNTRY_OF_ISSUE: category
    STRIKE_PRICE: float
    STRIKE_CURRENCY: category
    EXERCISE_STYLE: category
    CONTRACT_MULTIPLIER: float
    SECURITY_DESC: str
    CONTRACT_SETTL_MONTH: int
    DATED_DATE: int
    SETTL_TYPE: category
    SETTL_DATE: date
    PRICE_DIVISOR: int
    MIN_PRICE_INCREMENT: float
    TICK_SIZE_DENOMINATOR: int
    MIN_ORDER_QTY: int
    MAX_ORDER_QTY: int
    MULTI_LEG_MODEL: int
    MULTI_LEG_PRICE_METHOD: int
    INDEX_PCT: str
    NO_INSTR_ATTRIB: int
    INSTR_ATTRIB_TYPE: str
    INSTR_ATTRIB_VALUE: str
    START_DATE: str
    END_DATE: str
    NO_UNDERLYINGS: int
    UNDERLYING_SYMBOL: str
    UNDERLYING_SECURITY_ID: str
    UNDERLYING_SECURITY_ID_SOURCE: str
    UNDERLYING_SECURITY_EXCHANGE: category
    INDEX_THEORETICAL_QTY: str
    CURRENCY: category
    SETTL_CURRENCY: category
    SECURITY_STRATEGY_TYPE: category
    ASSET: category
    NO_SHARES_ISSUED: int
    SECURITY_VALIDITY_TIMESTAMP: str
    MARKET_SEGMENT_ID: int
    GOVERNANCE_INDICATOR: category
    CORPORATE_ACTION_EVENT_ID: int
    SECURITY_MATCH_TYPE: int
    NO_LEGS: int
    LEG_SYMBOL: str
    LEG_SECURITY_ID: str
    LEG_SECURITY_ID_SOURCE: str
    LEG_SECURITY_TYPE: category
    LEG_SECURITY_EXCHANGE: category
    LEG_RATIO_QTY: category
    LEG_SIDE: category
    NO_TICK_RULES: str
    NO_LOT_TYPE_RULES: int
    LOT_TYPE: category
    MIN_LOT_SIZE: int
    IMPLIED_MARKET_INDICATOR: category
    MIN_CROSS_QTY: int
    ISIN_NUMBER: str
    CLEARING_HOUSE_ID: int
    FILE_NAME: str
  df_read_params:
    sep: ","

# Mapping OTC Instrument Groups
mapping_otc_instrument_groups:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  app: pesquisapregao/download?filelist=MO{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: upper_constant
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: DD/MM/YYYY
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_mapping_otc_instrument_groups
  bl_insert_or_ignore: False
  bl_schema: True
  ignored_file_extensions_zip:
    - tmp
    - log
    - bak
  dtypes:
    TIPO: str
    ID_GRUPO_INSTRUMENTOS: int
    ID_CAMARA_ATIVO_OBJETO: category
    ID_INSTRUMENTO_ATIVO_OBJETO: int
    ORIGEM_INSTRUMENTO_ATIVO_OBJETO: category
    ID_FORMULA_RISCO: int
    ID_FPR: int
    ID_QUALIFICADOR: int
    DESCRICAO_QUALIFICADOR: category
    FILE_NAME: str
  df_read_params:
    skiprows: 1
    names:
      - TIPO
      - ID_GRUPO_INSTRUMENTOS
      - ID_CAMARA_ATIVO_OBJETO
      - ID_INSTRUMENTO_ATIVO_OBJETO
      - ORIGEM_INSTRUMENTO_ATIVO_OBJETO
      - ID_FORMULA_RISCO
      - ID_FPR
      - ID_QUALIFICADOR
      - DESCRICAO_QUALIFICADOR
    sep: ";"

# Mapping Standardized Instrument Groups
mapping_standardized_instrument_groups:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  app: pesquisapregao/download?filelist=MP{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: upper_constant
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: DD/MM/YYYY
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_mapping_standardized_instrument_groups
  bl_insert_or_ignore: False
  bl_schema: True
  ignored_file_extensions_zip:
    - tmp
    - log
    - bak
  dtypes:
    TIPO: str
    ID_GRUPO_INSTRUMENTOS: int
    ID_FORMULA_RISCO: int
    ID_FPR: int
    ID_QUALIFICADOR: int
    DESCRICAO_QUALIFICADOR: category
    DATA_INICIAL_INTERVALO_VENCIMENTOS: date
    DATA_FINAL_INTERVALO_VENCIMENTOS: date
    INDICADOR_FPR_INDEPENDENTE: int
    FILE_NAME: str
  df_read_params:
    skiprows: 1
    names:
      - TIPO
      - ID_GRUPO_INSTRUMENTOS
      - ID_FORMULA_RISCO
      - ID_FPR
      - ID_QUALIFICADOR
      - DESCRICAO_QUALIFICADOR
      - DATA_INICIAL_INTERVALO_VENCIMENTOS
      - DATA_FINAL_INTERVALO_VENCIMENTOS
      - INDICADOR_FPR_INDEPENDENTE
    sep: ";"

# Maximum Theoretical Margin for Open Positions and the Mininimum Values of Assets Pledged as Collateral
mtm_b3:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders:
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  # non-iteratively_get_data placeholders:
  #   - {{replacer}}: https://example.com/{{replacer}}
  #     note: the replacer can be any variable referenced within concrete product class
  app: pesquisapregao/download?filelist=MT{{dt_ref_yymmdd}}.zip
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: upper_constant
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: DD/MM/YYYY
  type_error_action: raise
  strategy_keep_when_dupl: first
  list_ignorable_exceptions:
  schema: raw
  table_name: br_b3_mtm_b3
  bl_insert_or_ignore: False
  bl_schema: True
  ignored_file_extensions_zip:
    - tmp
    - log
    - bak
  dtypes:
    INSTRUMENT_MTM: str
    HOLDING_DAY: str
    MTM_MAX_C_PHI1: str
    MTM_MAX_V_PHI1: str
    MIN_MARGIN_CREDIT_COLLATERAL_PHI1: float
    MIN_MARGIN_CREDIT_COLLATERAL_PHI2: str
    FILE_NAME: str
  df_read_params:
    skiprows: 1
    names:
      - INSTRUMENT_MTM
      - HOLDING_DAY
      - MTM_MAX_C_PHI1
      - MTM_MAX_V_PHI1
      - MIN_MARGIN_CREDIT_COLLATERAL_PHI1
      - MIN_MARGIN_CREDIT_COLLATERAL_PHI2
    sep: ";"

### CONFIGURATION TOOLS ###

credentials:
  host:
  headers:
  payload:
  token:
    host:
    get:
      req_method: GET
      bl_verify: False
      timeout: (12.0, 12.0)
    keys:
      token: token

logs:
  dtypes:
    FILE_NAME: str
    REF_DATE: date
    URL: str

metadata:


### RESOURCES TO BE SCRAPED ###

resource_example:
  req_method: GET
  # if host is not defined within credentials, use the source one
  host:
  headers:
  payload:
  slugs:
  # use this argument only if {{chunk_slugs}} is passed to app
  int_chunk_slugs:
  # iteratively_get_data placeholders: 
  #   - i (int): https://example.com/{{i}}
  #   - slug (str): https://example.com/{{slug}} - slugs in list format
  #   - chunk_slugs (List[str]): https://example.com/{{chunk_slugs}}
  app:
  bl_verify: False
  timeout: (12.0, 12.0)
  cols_from_case: default
  cols_to_case: upper_constant
  list_cols_drop_dupl:
  str_fmt_dt: YYYY-MM-DD
  type_error_action: raise
  strt_keeping_when_duplicated: first
  list_ignorable_exceptions:
  schema: raw
  table_name:
  bl_insert_or_ignore: False
  bl_schema: True
  dtypes:
    COL_1: date
    COL_2: str
    COL_3: int
    COL_4: float
    COL_5: category
  df_read_params:
  xml_keys:
    tags:
      tag_parent:
        - col1
        - col2
        - col3
        - col4
        - col5
    attributes:
      attrb: Attrb
  regex_patterns:
    event:
      condition_1:
        action_1: pattern_regex_1
        action_2: pattern_regex_2
      condition_2:
        action_1: pattern_regex_1
        action_2: pattern_regex_2
  xpaths:
    name_1: xpath_1
    name_2: xpath_2
